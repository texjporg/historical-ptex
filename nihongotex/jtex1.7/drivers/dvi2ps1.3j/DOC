1. fontdescについて

fontdescはfontについての色々な情報を記述するためのファイルである。
(fontdescはtexxで用いられている方法であるが、ここではかなり拡張されている。)
各行は空白またはタブで区切られたいくつかのフィールドに分かれており、
最初のフィールドによりその行で何が記述されるかが決まるが、
その説明の前にdviファイルとプリンターの関係について述べておく。
(to be written)

以下、第1フィールドの種類ごとに記述される情報について説明する。

o font  出力に使うfontファイルのtype(第2フィールド)とfontファイルの
	ある場所(第5フィールド)を記述する。今の所、第3フィールドは
	使われない。第4、5フィールドについては次の節を参照せよ。
  . pk, gf, pxl  通常のtfmファイルを使って作られたdviファイルを
	pk, gf, pxlのいずれかのfontファイルにより出力する。
	日本語に関しては、tfmファイルはNTT JTeX方式で
	fontファイルは3つのいずれかの方式の場合。(つまり英字、漢字の
	区別はない。)
  . jstfm (japanese subfont tfm)  NTT JTeX方式の日本語のtfmファイルを
	使って作られたdviファイルをプリンター内蔵の日本語フォントを
	使って出力する。
	第5フィールドはdviファイルを作るとき使うtfmファイルを指定する。
  . jfm  ASCII JTeX方式の日本語のjfmファイルを使って作られたdviファイルを
	プリンター内蔵の日本語フォントを使って出力する。
	第5フィールドはdviファイルを作るとき使うjfmファイルを指定する。
  . tfm  通常のtfmファイルを使って作られたdviファイルをプリンター内蔵の
	英字フォントを使って出力する。
	第5フィールドはdviファイルを作るとき使うtfmファイルを指定する。
	(to be written, 興味があればREADME-oldをよんで推測して下さい。
	ただしREADME-oldでlw fileと呼んでいるものは不要で、代わりに
	tfmファイルを使います。)
  . bitex (buit-in TeX)  プリンター内蔵の英字フォントを使って
	TeXのフォント(CM系)のまねをする。まねといってももちろん字体を
	まねするのではなく、フォントのlayout(フォント中での文字の配置)
	をまねするのである。(to be written, 興味があればREADME-oldを
	よんで推測して下さい。ただしこのtypeは余り役にたちません。)

o jfont
  . pk, gf, pxl  ASCII JTeX方式の日本語のjfmファイルを使って作られた
	dviファイルをpk, gf, pxlのいずれかのfontファイルにより出力する。
	ただし1つのフォントのあるサイズのbitmapデータが全部1つのファイル
	にはいっているのではなくNTT JTeXの日本語サブフォントの方式に
	従って分割されているとする。(NTT JTeXとASCII JTeXを共存させる
	ためであるが、これは実現されていない。3節参照。)

o packdict  NTT JTeX方式で日本語のmetric情報を指定すると多くのサブフォントが
	必要である。各サブフォントごとにPostScriptのdictionaryを作ると
	PostScript処理系のメモリーが不足するのでdviファイル中に現れる文字
	のみ集めてPostScriptのdictionaryを作る必要がある。第2フィールドで
	指定した文字列で始まるフォント名を持つフォントに関してその様な処理
	を行う。(プリンター内蔵日本語フォントを使う場合は関係ない。)

o bikanji  dviファイル中の日本語フォントとプリンター内蔵日本語フォントの
	関係を指定する。第2フィールドの文字列で始まる名前を持つ日本語
	フォントがあるサイズでdviファイル中に現れたら第4フィールドで
	指定したプリンター内蔵日本語フォントをそのサイズにあわせて使う。
	第2フィールドのフォントが固定文字幅を持つとき第3フィールドを
	fixedという文字列にすると第4フィールドの内蔵フォントをその文字幅
	にあわせて使う(ただし内蔵フォントは固定文字幅という前提に基づいて
	いる)が、そうでないときは第2フィールドのフォントにあわせて
	metric情報を修正した内蔵フォントを作って使う必要がある。
	font typeにjstfmまたはjfmを指定したときにはプリンター内蔵日本語
	フォントを使うのでこの指定が必要である。

o include  第2フィールドで指定したファイルを読み込む。

なお、#で始まる行はコメントであり、また第1フィールドが上記のもの以外の場合は
警告が出てその行は無視される。


2. fontファイルの探索

dvi2psがdviファイル中に現れるフォントに関する情報を得るときは、
font、jfontの行を上から順に見てゆきprototype path(5番目のフィールド)
とフォント名、フォントサイズ等から作られる名前を持つファイルを探す。
そのファイルが存在すればそのフォントはその行にあるtypeを持ち、
そのフォントに関する情報はそのファイルから得られる。

prototype pathの書き方は普通のファイル名の表記に以下の表記法を加えたもの
であり、その表記が有効なtypeは()内に示したものである。
	%f %n %s	font name	(すべてのtype)
	%d %m		font mag	(pk, gf, pxl)
	%F		family name	(jfontのpk, gf, pxl)
	%D		design size	(jfontのpk, gf, pxl)
	%j		jsubfont name	(jfontのpk, gf, pxl)
ただしfont mag(ここだけでの用語)はdviから計算されるフォントの拡大率
(=maginfication/1000)が同じでもプリンターの解像度とフォントのtypeに
よって値が異なる。例えばプリンターの解像度が300dpiのとき、
	magnification	type	font mag
	1000		pk	300
	1200		pk	360
	1440		pk	432
	1000		pxl	1500
などとなる。つまりpkやgfでは font mag = (magnification/1000)*dpi で
pxlでは font mag = (magnification/1000)*dpi*5 である。
(TeXの関連ドキュメントを参照せよ。)

同じtypeのフォントが2つ以上のdirectoryに分散しているときは単にそれぞれ
について記述すればよい。例えば、
	font	pk	*	3	/usr/lib/tex/fonts/pk/%f.%mpk
	font	pk	*	3	/usr/lib/tex/jfonts/pk/%f.%mpk
である。ただし気を付けなければならないのは異なるtypeのものが1つの
directoryにあるときで、例えば、pkフォントファイルもtfmファイルも
すべて1つのdirectory /usr/lib/tex/fonts にあるとき、英字も漢字も
pkで出力するなら
	font	pk	*	3	/usr/lib/tex/fonts/%f.%mpk
でよいが、漢字はプリンター内蔵フォントで出力しようとすると、NTT JTeXの
場合、
	font	jstfm	*	0	/usr/lib/tex/fonts/%f.tfm
	font	pk	*	3	/usr/lib/tex/fonts/%f.%mpk
としなければならず、
	font	pk	*	3	/usr/lib/tex/fonts/%f.%mpk
	font	jstfm	*	0	/usr/lib/tex/fonts/%f.tfm
としてはいけない。先に漢字のpkフォントファイルを見つけてしまうからである。

必要なfont magを持つフォントファイルがない場合、2通りの方法で
代用フォントファイルを使うことができる。第1の方法は、代わりとなる
font magを陽に指定する方法で、
	subst	<fontname>	<required>	<substitute>
の様に指定する。これは<fontname>で始まるフォント名については
font mag <required>を<substitute>に取り換えてフォントファイルを
探すことを表している。第2の方法は、sqrt(1.2)^iのうちdviから計算される
フォントの拡大率に近いものから順に拡大率の代わりに使ってfont magを
計算するという方法である。いずれの方法も使わない場合はfont,jfontの
行の第4フィールドを0に、第1の方法を使う場合は1に、第2の方法を使う場合は2に、
両方を使う場合は3にする。例えば
	font	pk	*	1	/usr/lib/tex/fonts/pk/%f.%mpk
	subst	cm	320	300
	subst	cm	384	360
とすればfont nameがcmr10でfont magが320のフォントファイルが必要なとき
/usr/lib/tex/fonts/pk/cmr10.300pkがあればそれを使い、font nameがcmr10で
font magが384のフォントファイルが必要なとき/usr/lib/tex/fonts/pk/cmr10.360pk
があればそれを使うことになる。また
	font	pk	*	2	/usr/lib/tex/fonts/pk/%f.%mpk
とすれば/usr/lib/tex/fonts/pk/cmr10.300pkしかないのにfont nameがcmr10で
font magが360や432のフォントファイルが必要である、といった場合に対処できる。

代用フォントを使うことを指定した場合、まずこの節の最初に書いた様に
上から順に探し、見つからなければ第1の方法を使うと指定したfont,jfontの
行について上から順に探し、それでも見つからなければ第2の方法を使うと
指定したfont,jfontの行について上から順に探す。

代用フォントを使った場合、適当に拡大/縮小して必要とするフォントの大きさに
するが、これは単純にPostScriptの拡大/縮小機能を使っているだけなので
きれいに拡大/縮小はできない。あくまで一時的な代用手段である。
(フォントのMETAFONTソースがないときなどは仕方がないから代用手段でがまん
するしかないのだが。)


3. fontdescの応用例

上で述べたように、必要なfont magを持つフォントファイルがないときは
適当に代用フォントファイルを使うことができるが、必要なfont nameを
持つフォントファイルそのものがないこともある。そういうときの代用
フォントファイルを指定する方法はないが、次のようにすれば同様の効果が
得られる。例えばcmXXというフォントが必要だがないのでcmr10で代用した
ければ、適当なdirectory(fとする)を作り
	ln [-s] なんとか/cmr10.300pk f/cmXX.300pk
などとする。(font magが300だけとは限らないし、フォントファイル名を
このように書くとは限らないが。)そしてfontdescファイルに
	font	pk	*	3	f/%f.%mpk
を加えれば各自が自分の好きな代用フォントを指定できる。ただし必要な
フォントと代用フォントは文字幅(tfm)が異なるので出力がずれるという
不都合は生じる。

長いファイル名が許されないSystem Vの場合、例えば
	font	pk	*	3	/usr/lib/tex/fonts/pk/%f/%mpk
という指定ができるようにファイル名を変更してやればよい。


4. NTT JTeXとASCII JTeX

NTT JTeXに関しては以下の様な立場を取ることにした。
	大日本フォントのtfmを使うJTeXだけを用意し、
	dvi2psをかけるときbitmapか内蔵フォントかを選ぶ。
	大日本フォントのmetricにあわせて内蔵フォントを
	使うのでみにくくなるかもしれないが出力は速いだろう
	から、ドラフトということでがまんする。

ASCII JTeXで使っている大日本フォントはNTT JTeXで使っているのと違い、
固定幅でなくちゃんと文字毎に調整してあるので、その大日本フォントの
jfmファイルを使って作ったdviファイルをプリンター内蔵フォントで
出力するにはプリンター内蔵フォントのmetricsを修正する必要があるが、
その作業は行っていない。またASCII JTeXで使っている大日本フォントの
bitmapデータファイルはpxl4というformatになっているか、それもサポート
していない。要するに、現在の所ASCII JTeXで作ったdviを出力できるのは、
min*,goth*のjfmファイル(LBP8のフォントのmetricsを修正したもの)を
使ってdviを作りLW-NTXJを使って出力する場合だけである。ただし、pxl4を
サブフォントに分割してpkに変換すれば、NTT JTeXとの共存はできないが、
大日本フォントでの出力はできる。


5. fontdescファイルの指定

dvi2psのoption、-F file でファイルfileをfontdescファイルとして指定する。
-F optionがなく、環境変数FONTDESCがsetしてあればその値をfontdescファイル
として使う。いずれもなければデフォールトのfontdescファイル(サイトにより
異なる)を使う。


6. プリンターの解像度の指定

dvi2psのoption、-R n でプリンターの解像度をn dpiと指定する。
この指定がないときはデフォールトの解像度(サイトにより異なる)を使う。


7. include, eepic, tpic

このdvi2psはTeXの\specialを使った機能のうち、PostScriptプログラムの
include機能、eepic/tpic macro packageを使った描画機能を実現している。
includeの仕方についてはdvi2psのmanual pageを、eepic/tpicについては
それぞれのマニュアルを参照せよ。これらの機能を使うために特別に指定
しなければならないことは何もない。


8. lprとの接続例

通常はdvi2psの出力をすぐにプリンターに送る。参考までにその様な機能を
持つcshell script `lprdvi'をつけておく。lprdviは大日本フォントのtfmを
使ったNTT JTeXで作ったdviファイルをプリントするプログラムで、dvi2psの
optionに加えて次のoptionを持つ。
	-Draft	日本語フォントとしてプリンター内蔵フォントを使う。
		これを指定しないときはpk formatのフォントファイルを使う。
	-x n	左上にある原点(紙の左端から約1inch上端から約1inch)
		を右にn unit(1unitは1/72inch)ずらす。nが負なら左にずれる。
	-y n	-xと同様で、下にずれる。
	-Nowarn	warningがでたらプリンターには送らない。
これらのoptionはdvi2psのoptionの前におかなければならない。(手抜き。)
また-Draftはfontdescファイルを切り替えているだけなのでdvi2psのoptionで
-Fを指定するとそちらの方が有効になる。
