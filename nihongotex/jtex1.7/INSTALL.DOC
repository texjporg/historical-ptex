========================================================================
日本語 TeX 1.7 インストールガイド

                             株式会社アスキー ビジネスソフトウェア事業部

========================================================================
1. TeX に関する知識

  TeX のインストールをするにあたって、TeX に関する基本的な知識を持つこと
は重要です。本章では、次章から説明していくインストール作業の説明に出て来
る単語の説明も兼ね、基本的な事項の説明をしていきます。

------------------------------------------------------------------------
1.1 initex と virtex

  TeX システムでは、様々な用途に応じたシステムを作成できます。本文章で説
明する日本語 TeX , LaTeX を含め、数々の TeX システムが存在します。これら
すべての TeX システムのもとになっているプログラムが initex と virtex です。
initex は、TeX が内部で使用しているレジスタやパラメータの値の初期化、TeX
内部のメモリ情報をファイルに出力する処理を行います。また virtex は、
initex が出力したファイルを読み込む機能を有しており、各種の組版命令が利用
可能な TeX システムとして動作することができます。

この2つのファイルを元に各種の TeX システムを生成することができます。

------------------------------------------------------------------------
1.2 プリミティブ、フォーマットファイルとプリローディング

  TeX 自体には、プリミティブという低レベルな機能しか備わっていません。し
かし、このプリミティブは、マクロ定義機能・文字列処理機能・ファイル入力機
能・条件判定機能といった強力なプログラミング言語としての特徴も持っていま
す。そのため実際にはプリミティブを使って、よく使う組版上の処理を1つの命令
として定義しておき、定義済みの命令を使用して組版の指定を行うのが一般的で
す。各種の TeX システムでは、プリミティブを使って各種の便利な命令を定義し
たファイルをあらかじめ TeX の本体に読み込んでいます。このファイルをフォー
マットファイルといい、このフォーマットファイルを事前に読み込む機能をプリ
ローディング機能といいます。

------------------------------------------------------------------------
1.3 plain TeX と LaTeX

  TeX の最も基本的なシステムは plain TeX です。plain TeX は TeX の作成者、
Donald E. Knuth 教授が作成したものです。plain TeX は、組版上必要となる最
小限の機能を定義した plain.tex というマクロファイルを initex で処理し、出
力されたフォーマットファイル plain.fmt を使用して作成します。plain TeX は、
あらゆる TeX システムの基本になっていて、組版に使う寸法を定義する命令や条
件判定文を定義するための命令などについては、 plain.tex で定義してある機能
がそのまま使えます。

  現在、TeX システムの中で最もよく使われているのが LaTeX です。LaTeX は、
Leslie Lamport氏が作成したものです。LaTeX は、lplain.tex というマクロファ
イルを initex で処理し、出力されたフォーマットファイルlplain.fmt を使用し
て作成します。LaTeX では文書全体を論理的な構造に分けて記述するようになっ
ていたり、一般的に使える多くの組版命令が定義されているので、TeX をあまり
知らなくても文書が記述できるように配慮されています。また、plain TeX の機
能も含まれているので、ユーザが自分で組版命令を追加することが可能です。

------------------------------------------------------------------------
1.4 WEB システム ( weave と tangle )

  Knuth 教授が TeX , METAFONT を作成するのに導入したのが WEB システムです。
WEB システムは weave , tangle という2つのソフトウェアから成り立っていて、
プログラムとドキュメントの両方を同時に記述した WEB ファイルを処理します。

  WEB ファイルを weave で処理すると、 TeX 処理できるファイルを出力します。
Pascal のプログラム部分は、コーディングされたプログラムリストとして読みや
すいように出力されます。また、WEB ファイルを tangle で処理すると、TeX の
組版命令を削除した Pascal プログラムだけのファイルを出力します。

------------------------------------------------------------------------
1.5 チェンジファイルと日本語化

  WEB システムでは、WEB ファイルにプログラムとドキュメントの両方を同時に
記述できるという特徴の他に、チェンジファイルという概念が導入されています。
チェンジファイルとは、ソースコードのどの部分をどう変更するかを記述したファ
イルです。WEB システムで処理を行う際には、チェンジファイルを指定すれば、
変更した箇所を組み込んだソースファイルを出力します。チェンジファイルを導
入することにより、オリジナルのソースコードを変えずに機能の追加やバグの修
正ができます。

  TeX で日本語の文章も扱えるようにした日本語 TeX も、チェンジファイルによっ
て作成されます。

========================================================================
2. インストール作業手順

------------------------------------------------------------------------
2.1 配布テープの読み込み

  配布テープの主な内容は以下のようになっています。

  1. 英語版 TeX version 2.99

    ・compress
          ファイルを圧縮するコマンド compress のソースファイル
    ・undump
          プリロード済み TeX システムを作成するために使用するコマンド
          undump のソースファイル
    ・tex82
          TeX と METAFONT システム本体のソースファイル
    ・babel
          英語以外の言語用のユーティリティファイル
    ・DVIware
          各種出力装置用デバイスドライバのソースファイル
    ・utilityfonts
          METAFONT で作成したフォントの METAFONT ソースファイル
    ・cmfonts
          CM ( Computer Modern ) フォント用の METAFONT ソースファイル・
          METAFONT で作成した TFM ファイル・GK/PK フォーマットのフォント
          ファイル
    ・LaTeXfonts
          LaTeX が使用するフォントの METAFONT ソースファイル・METAFONT で
          作成した TFM ファイル・GK/PK フォーマットのフォントファイル
    ・amsfonts
          AMS ( American Mathematical Society ) が管理しているロシア文字・
          Euler フォント・数学記号のフォントファイルなど

  2. 日本語 TeX version 1.7

    ・jtex
          WEB ファイル・日本語 TeX のチェンジファイルなど
    ・doc
          日本語 TeX の使い方やインプリメントの方法を書いたドキュメントファ
          イル
    ・jfms
          日本語 TeX の実行時に使用する漢字フォント用の JFM (TFM) ファイル
    ・jmacros
          日本語用に変更したマクロファイル
    ・tfm
          英語版 TeX の TFM ファイル
    ・macros
          英語版 TeX のマクロファイル
    ・undump
          プリロード済み TeX システムを作成するために使用するコマンド
          undump のソースファイル
          (英語版 TeX version 2.99 のテープに収められているものと同じです。)
    ・drivers
          デバイスドライバのソースファイル
    ・ptex
          pTeX (縦組み TeX ) のドキュメントファイル・TFM ファイル・ソース
          ファイル・サンプルファイルなど(プレリリース)
    ・kanji 
          テキストファイルの漢字コードをシフト JIS から EUC に変換するフィ
          ルタ
    ・patch 
          EUC バージョン作成のためのパッチファイル

------------------------------------------------------------------------
2.2 EUCsetupの実行

  テープに収録されている日本語 TeX は、漢字コードとして Shift JIS を使う
ことを想定しています。漢字コードとして EUC を使いたい場合、日本語 TeX の
配布テープ中の EUCsetup を実行する必要があります。
  EUCsetup 中では、 patch というコマンドを使用します。patch コマンドがな
い場合は、日本語 TeX 配布テープの utils/patch ディレクトリの下にソースが
ありますので、README ファイルを参考にして patch コマンドを作成して下さい。
  patch コマンドが使用できるように設定した後(生成された patch というファ
イルを他の実行形式ファイルを収めているディレクトリに移すとか、path を設定
するなどして)、EUCsetup を実行して下さい。

------------------------------------------------------------------------
2.3 ディレクトリの設定

  TeX を実行するには、少なくとも以下にあげるファイルを必要とします。

  ・マクロファイル
  ・TFMファイル(フォントファイル)
  ・プールファイル

これらのファイルを置くディレクトリを設定する必要があります。また、作成し
た日本語 TeX のコマンドをインストールするディレクトリも選ぶ必要があります。
以下では、一例として

  ・マクロファイルを /usr/lib/tex/macros の下に
  ・TFM ファイル(フォントファイル)を /usr/lib/tex/fonts の下に
  ・プールファイル( TeX による処理時に使用される文字列を収めたファイル)を
    /usr/lib/tex の下に
  ・日本語 TeX のコマンドを /usr/local/bin の下に

置くこととして説明をしていきます。

------------------------------------------------------------------------
2.4 日本語 TeX の作成

------------------------------------------------------------------------
2.4.1 initex , virtex コマンドの作成

  日本語 TeX を作成するには、日本語を処理できるように変更した initex と
virtex が必要となります。この initex と virtex を作成するためには、以下に
示すディレクトリの下にあるファイルを使います。

  ・jtex
        日本語 TeX を作成するための Makefile や、TeX が参照するファイルが
        収められているディレクトリなどを設定するためのファイル site.h 等
        を含むディレクトリ
  ・jtex/jtangle
        TeX 本体 tex.web と日本語用のチェンジファイルとから、Pascal プロ
        グラムを生成するためのコマンド jtangle の作成に必要なファイルを含
        むディレクトリ
        (注 : 日本語 TeX を作成するためには tangle ではなく jtangle を使
        用しなければなりません。)
  ・jtex/web2cdir
        Pascal プログラムから複数の C プログラムを生成するためのコマンド
        web2c , fixwrites , regfix , splitup の作成に必要なファイルを含む
        ディレクトリ
  ・jtex/texdir
        TeX 本体 tex.web と、それに対する日本語用のチェンジファイル
        jctex.ch 等を含むディレクトリ
  ・jtex/ctex
        initex , virtex を作成するための C プログラム等を含むディレクトリ
  ・jtex/bigctex
        bigtex (オリジナルの tex で処理しきれないような大文書等を扱えるよ
        うにした tex )の initex , virtex を作成するための C プログラム等
        を含むディレクトリ

initex , virtex を作成する手順は以下のとおりです。

  1. ディレクトリ jtex の下にあるファイル site.h を使用するシステムに合わ
     せて修正します。

    (a) TeX の内部から起動するエディタ名の絶対パスを設定します。設定は

              #define EDITOR  "/usr/local/bin/jvi +%d +%s"

        を変更することによって行います。%d , %s はエディタを起動したとき
        に引数として渡されるパラメータで、それぞれ行番号とファイル名を意
        味しています。

    (b) TeX が参照するファイルが収められているディレクトリ名を設定します。
        設定は

              #define TEXINPUTS       ".:/usr/lib/tex/macros"
              #define TEXFONTS        ".:/usr/lib/tex/fonts"
              #define TEXPOOL         ".:/usr/lib/tex"
              #define TEXFORMATS      ".:/usr/lib/tex"

        を変更することによって行います。ここで、

            ・TEXINPUTS はマクロファイルを置くディレクトリを
            ・TEXFONTS は TFM ファイル(フォントファイル)を置くディレクトリを
            ・TEXPOOL はプールファイルを置くディレクトリを
            ・TEXFORMATS はフォーマットファイルを置くディレクトリを

        それぞれ2.2節で選んだ通りに設定します。

  2. ディレクトリ jtex の下にあるファイル Makefile を修正します。

    (a) TeX の本体 ( initex と virtex ) をインストールするディレクトリを
        設定します。設定は

              BINDIR=/usr/local/bin

        を2.2節で選んだ通りに変更します。

    (b) プールファイルを置くディレクトリを設定します。設定は

              TEXPOOLDIR=/usr/lib/tex

        を2.2節で選んだ通りに変更します。

  3. ディレクトリ jtex の下で make コマンドを実行します。

    (a) TeX の本体 ( initex と virtex ) を作成するためには以下の ^ の部分
        を入力します。

            % make     ( bigtex を作成する場合は % make BIG )
              ^^^^                                 ^^^^^^^^

    (b) 作成した TeX の本体 ( initex と virtex ) をインストールするために
        は以下の ^ の部分を入力します。

            % make install-all
              ^^^^^^^^^^^^^^^^

------------------------------------------------------------------------
2.4.2 プリロード済みの TeX コマンドについて

  1.2節あるいは 1.3節で説明したように、通常 TeX, あるいは LaTeXと呼ばれる
システムは、それぞれのフォーマットを読み込んだ状態の virtex にほかなりま
せん。

  以前は、フォーマットを読み込んだ状態の virtex のメモリ・イメージを作成
して実行可能なプログラムに変換し、変換されたプログラムに tex, latexとい
う名前を付けて使用するという方法が行われていました。この方法では、undump
と呼ばれる、メモリ・イメージから実行形式に変換するための Unix システムの
種類やバージョンに依存する特殊なプログラムが必要になってしまいます。

  しかし、最近は tex, latex などを起動する際に毎回 virtex にフォーマット
ファイルを読み込ませることが多くなってきました。この方法では、tex の起動
のたびにフォーマットの読み込み動作のために CPU が消費されてしまうという
欠点がありますが、undump のような特殊なプログラムがなくてもあらゆる Unix
システムで利用可能で、ディスク領域も節約できるという特長があります。最近
の Unix マシンは充分に速度が速くなり、フォーマットの読み込みに消費される
CPU 時間が無視できるようになったこともこの方法でインストールされることが
多くなった原因の一つでしょう。

次の項で undump コマンドの作成方法について解説しますが、毎回フォーマット
ファイルを読み込ませる方法でインストールする場合は、2.4.5 へ進んでくださ
い。

------------------------------------------------------------------------
2.4.3 undump コマンドの作成

  フォーマットファイルを読み込んだ状態の virtex のメモリ・イメージを作成
するためには undump コマンドが必要です。この undump を作成するためには以
下に示すディレクトリの下にあるファイルを使います。

  ・undump
        core ファイルから TeX のコマンドを生成するためのコマンド undump
        の作成に必要なファイルを含むディレクトリ

undump を作成する手順は以下のとおりです。

  1. ディレクトリ undump に移動します。

  2. undump ディレクトリの下には、いくつかのシステムに対応するよう
     undump.c.* , Makefile.* ファイルが用意されています。(注 : 対応するファ
     イルがない場合、使用するシステムに対応するよう改良してください。また、
     改良できない場合でも、プリロードしない形で TeX を使用することができ
     ます。この方法については2.4.5節で説明します。)これらのファイルを
     undump.c , Makefile にコピーするようシェルスクリプトファイル Setup.*
     が用意されていますので、これを実行します。

  3. make コマンドを実行します。

    (a) undump コマンドを作成するためには以下の ^ の部分を入力します。

            % make undump
              ^^^^^^^^^^^

    (b) 作成した undump をインストールするためには以下の ^ の部分を入力し
        ます。

            % make install
              ^^^^^^^^^^^^

------------------------------------------------------------------------
2.4.4 プリロード済み実行ファイルの作成

  undump が作成できたら、それを使ってフォーマットファイルをプリロードした
形の TeX , LaTeX のコマンドを作成できます。その方法について説明していきま
す。

  1. ディレクトリ jfms にある日本語版の TFM ファイル(フォントファイル)を、
     2.2節で選んだディレクトリにコピーします。

          % install -c -m 644 jfms/*.tfm /usr/lib/tex/fonts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

     同様にディレクトリ tfm にある英語版の TFM ファイルもコピーします。

          % install -c -m 644 tfm/*.tfm /usr/lib/tex/fonts
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  2. ディレクトリ jmacros にある日本語版 TeX 用のマクロファイルを2.2節で
     選んだディレクトリにコピーします。

          % install -c -m 644 jmacros/* /usr/lib/tex/macros
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

     同様にディレクトリ macros にある英語版 TeX 用のマクロファイルもコピー
     します。

          % install -c -m 644 macros/* /usr/lib/tex/macros
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  3. 環境変数を設定します。すでに site.h に設定しておけば、環境変数を設定
     する必要はありませんが、環境変数を設定することによっても TeX の環境
     を変更できます。環境変数には次のものがあります。

          ・TEXEDIT
                TeX 内部から起動するエディタ名
          ・TEXINPUTS
                マクロファイルを置いているディレクトリ名
          ・TEXFONTS
                TFM ファイル(フォントファイル)を置いているディレクトリ名
          ・TEXPOOL
                プールファイルを置いているディレクトリ名

  4. make コマンドを使って TeX , LaTeX のコマンド jtex , jlatex を作成し
     ます。

    (a) ディレクトリ jtex/ctex ( bigtex を作成する場合はディレクトリ
        jtex/bigctex ) に移ります。

    (b) make コマンドを実行します。

          % make jtex jlatex
            ^^^^^^^^^^^^^^^^
     処理中にファイルが見つからないというエラーメッセージを表示する場合
     は、以下のチェックを行って下さい。

          ・initex が正しいディレクトリを参照していないことが考えられます。
            環境変数の設定を確認し、必要ならば設定しなおして下さい。
          ・必要なフォントファイル・マクロファイルが存在しないことが考え
            られます。site.h または環境変数で設定したフォントファイル・マ
            クロファイルの入っているディレクトリ内にファイルがあるかどう
            かを確認し、ない場合はコピーして下さい。

     これで実行可能な日本語版 TeX , LaTeX のコマンド jtex , jlatex が作成
     できます。

  5. jtex , jlatex を2.2節で選んだ日本語 TeX のコマンドを置くディレクトリ
     にインストールします。

------------------------------------------------------------------------
2.4.5 フォーマットファイルを毎回読み込ませる場合

  undump コマンドを用意しないで、フォーマットファイルを毎回読み込ませる
場合は、以下の方法でインストールします。
  virtex は、virtex 以外の名前で起動され、`&' によるフォーマットファイル
の明示的な指定がない場合、自分自身の名前をフォーマットファイル名として採
用します。例えば、virtex を jlatex という名前に変えておくと、`jlatex.fmt'
というフォーマットファイルをロードするのです。

  1. 前節と同様にフォントファイル・マクロファイルをコピーし、環境変数を設
     定します。

  2. make コマンドを使って TeX, LaTeX のフォーマットファイル jplain.fmt,
     jlplain.fmt を作成します。

    (a) ディレクトリ jtex/ctex ( bigtex を作成する場合はディレクトリ
        jtex/bigctex ) に移ります。

    (b) make コマンドを実行します。

          % make jplain.fmt jlplain.fmt
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

  3. フォーマットファイルを、<コマンド名>.fmt のファイル名でインストール
     します。

          % install -c -m 644 jplain.fmt /usr/lib/tex/jtex.fmt
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          % install -c -m 644 jlplain.fmt /usr/lib/tex/jlatex.fmt
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  4. jtex, jlatex の名前で virtex を起動するようにリンクします。

          % ln -s virtex /usr/local/bin/jtex
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          % ln -s virtex /usr/local/bin/jlatex
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

========================================================================
3. インストールに際しての注意事項

  TeX をはじめてインストールするという人や、新しいマシンにインストールす
る場合には、以下の点に特に注意して作業をすすめてください。

   o はじめてインストールする方には、オリジナルの README ファイルに目を
     とおしてから作業を開始することをお勧めします。このメモの内容はそれ
     らのファイルの要約であり、詳しい説明や、問題が発生した場合の解決方
     法のヒントがそれらの README ファイルに含まれています。

   o インストールに先だって、充分なディスク領域を確保しておいてください。
     ドキュメントの多くは圧縮されていますし、フォントの作成やインストー
     ルに際してもディスク領域が必要です。

     また、コンパイル時には /tmp の領域も充分な大きさが必要です。
     TeX は非常に大きなプログラムなので、小さなシステムでコンパイルをし
     ていると、中間ファイルを作成するための /tmp が不足することがありま
     す。/tmp が / (root file system) にとられている場合には特に注意が必
     要です。

          % df /tmp
	    ^^^^^^^

     を実行して空き領域の大きさを確認しておきましょう。10MB は確保してお
     くことをお勧めします。できれば、/tmp は root file system以外の別の
     file system をマウントして作業をすすめた方が良いでしょう。あるいは、
     コンパイラのオプションで /tmp の代わりに /usr/tmp や /var/tmp を使
     用するようにするのもひとつの解決法です。

   o 繰り返しますが、TeX は非常に大きなプログラムです。そのために、使用
     するコンパイラによってはコンパイルはできても、正しく動作しないこと
     もあり得ます。新しい OS, machine, コンパイラを使用する場合には、英
     字版をコンパイル後 Trip テストを実施することをお勧めします（日本語
     版は Tripテストにとおりません）。

     万一、正しく動作しないようであれば、コンパイル時の最適化をしないよ
     うにしてみてください（あるいは、最適化のレベルを低くしてみてくださ
     い）。いくつかのシステムやコンパイラでは、最適化をしないとキチンと
     動作するのに、最適化すると正しく動作しないことが知られています。詳
     しくは、以下のファイルを参照してください。

        tex2.99/tex82/README.WEB-to-C
        tex3.14/TeX3.14/MACHINES.{W2C,tex82}

========================================================================
4. 最後に

  インストールにあたって、各ディレクトリにある README ファイル等に目を通
すことはたいへん有効です。make コマンドを実行する前に、そのディレクトリに
ある README* ファイルを読むことをお勧めします。

  なお、TeX システムに関するより詳しい説明については、配布テープに入って
いるマニュアルを参照して下さい。

  本文書が TeX のインストール作業の一助となれば幸いです。

========================================================================
